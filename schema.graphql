type Dislike {
  createdAt: ISO8601DateTime!
  id: String!
  ingredient: Ingredient!
  success: Boolean
  updatedAt: ISO8601DateTime!
  user: User!
}

type Favorite {
  createdAt: ISO8601DateTime!
  id: String!
  item: Item!
  success: Boolean
  updatedAt: ISO8601DateTime!
  user: User!
}

"""
An ISO 8601-encoded datetime
"""
scalar ISO8601DateTime @specifiedBy(url: "https://tools.ietf.org/html/rfc3339")

type Ingredient {
  createdAt: ISO8601DateTime!
  id: String!
  name: String!
  updatedAt: ISO8601DateTime!
}

type IngredientItem {
  id: String!
  name: String!
}

type Item {
  createdAt: ISO8601DateTime!
  id: ID!
  image: String!
  ingredients: [IngredientItem!]!
  name: String!
  updatedAt: ISO8601DateTime!
}

type Mutation {
  createDislikes(email: String!, ingredientIds: [String!]!): [Dislike!]!
  createFavorite(itemId: String!, userId: String!): Favorite!
  createFavorites(email: String!, itemIds: [String!]!): [Favorite!]!
  createOrder(itemId: String!, userId: String!): Order!
  createUser(email: String!, password: String!): User!
  deleteDislikes(email: String!, ingredientIds: [String!]!): Boolean!
  deleteFavorites(email: String!, itemIds: [String!]!): Boolean!
}

type Order {
  createdAt: ISO8601DateTime!
  id: ID!
  item: Item!
  updatedAt: ISO8601DateTime!
  user: User!
}

type Query {
  """
  emailを指定して検索、emailの指定がなければ全件取得
  """
  dislikes(email: String): [Dislike!]!
  favorites(email: String, userId: ID): [Favorite!]!
  getUser(email: String!): User
  ingredients(fieldName: String, fieldValue: String): [Ingredient!]!
  items(fieldName: String, fieldValue: String, id: ID): [Item!]!

  """
  emailを指定して検索、emailの指定がなければ全件取得
  """
  order(email: String): [Order!]!
}

type User {
  createdAt: ISO8601DateTime!
  email: String!
  id: ID!
  password: String!
  updatedAt: ISO8601DateTime!
  userName: String!
}
